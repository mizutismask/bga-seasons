/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * SeasonsSK implementation : © <Your name here> <Your email address here>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * seasonssk.css
 *
 * SeasonsSK stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (seasonssk_seasonssk.tpl), and to HTML elements you create dynamically
    (in seasonssk.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/

/* Note: you must not use any @import directive */

/********* You can start writing your CSS below this line: **********/
:root {
	--scoreColor: #2373a1;
	--scoreSecondaryColor: #fc6f03;
    --scoreShadowColor: white;
}

#score {
	display: none;
	justify-content: center;
}
#score #tabble-wrapper {
	padding: 40px;
	/*background: url("img/score-background.png");*/
	background-size: 100% 100%;
}
#score #tabble-wrapper table tbody tr {
	border-top: 1px solid var(--scoreSecondaryColor);
}
#score #tabble-wrapper table td:not(:first-child),
#score #tabble-wrapper table th:not(:first-child) {
	border-left: 1px solid var(--scoreSecondaryColor);
}
#score #tabble-wrapper table tr {
	height: 40px;
}
#score #tabble-wrapper table tr th {
	text-align: center;
	color: var(--scoreColor);
	text-shadow: 0px 0px 1px var(--scoreShadowColor),
		0px 0px 2px var(--scoreShadowColor),
		0px 0px 3px var(--scoreShadowColor);
	padding: 8px;
}
#score #tabble-wrapper table tr td {
	width: 100px;
	text-align: center;
}
#score #tabble-wrapper table tr td:not(:first-child) {
	font-size: 150%;
	color: var(--scoreColor);
	text-shadow: 0px 0px 1px var(--scoreShadowColor),
		0px 0px 2px var(--scoreShadowColor),
		0px 0px 3px var(--scoreShadowColor);
}
#score #tabble-wrapper table tr td.player-name {
	width: 181px;
	font-weight: bold;
	text-shadow: 0px 0px 1px var(--scoreShadowColor), 0px 0px 2px var(--scoreShadowColor),
		0px 0px 3px var(--scoreShadowColor);
	word-break: break-all;
	font-size: 120%;
}
#score #tabble-wrapper table tr td.total {
	font-weight: bold;
}
